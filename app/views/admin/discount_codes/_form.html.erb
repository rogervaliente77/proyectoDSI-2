<%= form_with(model: [:admin, @discount_code], local: true, html: { class: "needs-validation", novalidate: true }) do |f| %>
  <% if @discount_code.errors.any? %>
    <div class="alert alert-danger">
      <h4>Errores:</h4>
      <ul>
        <% @discount_code.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Descuento -->
  <div class="mb-3">
    <%= f.label :discount, "Descuento (%)", class: "form-label" %>
    <%= f.number_field :discount, class: "form-control", min: 1, max: 100, required: true %>
    <div class="invalid-feedback">
      Por favor, ingrese un valor de descuento válido (1-100).
    </div>
  </div>

  <!-- Fecha de vencimiento -->
  <div class="mb-3">
    <%= f.label :due_date, "Fecha de vencimiento", class: "form-label" %>
    <%= f.date_field :due_date, class: "form-control", required: true %>
    <div class="invalid-feedback">
      Seleccione una fecha de vencimiento válida.
    </div>
  </div>

  <!-- Producto -->
  <div class="mb-3">
    <%= f.label :product_id, "Producto", class: "form-label" %>
    <div class="input-group">
      <%= f.hidden_field :product_id, id: "discount_code_product_id", value: @discount_code.product_id %>
      <input type="text" id="selected_product_name" class="form-control" placeholder="Selecciona un producto" readonly
             value="<%= @discount_code.product&.name %>" aria-label="Producto seleccionado">
      <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#productModal">
        Buscar
      </button>
    </div>
    <div class="form-text">Seleccione el producto al que aplicará este código de descuento.</div>
  </div>

  <!-- Botones -->
  <div class="mt-3 d-flex gap-2">
    <%= f.submit "Guardar", class: "btn btn-success" %>
    <%= link_to "Cancelar", admin_discount_codes_path, class: "btn btn-secondary" %>
  </div>
<% end %>

<!-- Modal de búsqueda de productos -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content border-0 shadow">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="productModalLabel">Buscar Producto</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        <input type="text" id="product_search_input" class="form-control mb-3" placeholder="Escribe el nombre del producto..." aria-label="Buscar producto">
        <div id="loader" class="text-center my-2" style="display:none;">
          <div class="spinner-border text-primary" role="status" aria-hidden="true"></div>
          <span class="visually-hidden">Buscando...</span>
        </div>
        <ul id="product_search_results" class="list-group list-group-flush"></ul>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>

<!-- JS para búsqueda de productos -->
<script>
document.addEventListener("DOMContentLoaded", () => {
  const searchInput = document.getElementById("product_search_input");
  const resultsList = document.getElementById("product_search_results");
  const hiddenInput = document.getElementById("discount_code_product_id");
  const selectedName = document.getElementById("selected_product_name");
  const loader = document.getElementById("loader");

  const searchProducts = async (query) => {
    loader.style.display = "block";
    try {
      const response = await fetch(`/admin/products/search?q=${encodeURIComponent(query)}`);
      if (!response.ok) throw new Error("Error al buscar productos");
      return await response.json();
    } catch (err) {
      console.error(err);
      return [];
    } finally {
      loader.style.display = "none";
    }
  };

  searchInput.addEventListener("input", async () => {
    const query = searchInput.value.trim();
    resultsList.innerHTML = "";
    if (!query) return;

    const products = await searchProducts(query);
    if (!products.length) {
      const li = document.createElement("li");
      li.textContent = "No se encontraron productos.";
      li.className = "list-group-item text-muted";
      resultsList.appendChild(li);
      return;
    }

    products.forEach(product => {
      const li = document.createElement("li");
      li.className = "list-group-item list-group-item-action";
      li.textContent = product.name;
      li.setAttribute("role", "button");
      li.tabIndex = 0;
      li.addEventListener("click", () => {
        hiddenInput.value = product.id;
        selectedName.value = product.name;
        resultsList.innerHTML = "";
        const modal = bootstrap.Modal.getInstance(document.getElementById('productModal'));
        modal.hide();
      });
      resultsList.appendChild(li);
    });
  });
});
</script>
